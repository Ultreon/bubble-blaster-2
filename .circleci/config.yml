# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-windows:
    machine:
      image: 'windows-server-2022-gui:current'
      resource_class: windows.large
      shell: powershell.exe -ExecutionPolicy Bypass
    description: "Build Windows EXE and MSI installers"
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Set up WiX Toolset
          command: |
            choco install wixtoolset --params '/64 /m' -y
      - run:
          name: "Build Project"
          command: |
            ./gradlew.bat jpackage jpackageAlt --no-daemon
          environment:
            CIRCLE_CI: "true"
      - store_artifacts:
          name: "Store Artifacts"
          path: desktop-merge/build/dist

  build-macos:
    macos:
      xcode: "14.2.0"
    description: "Build macOS PKG installers and DMG file"
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Make gradlew executable"
          command: "chmod +x gradlew"
      - run:
          name: "Build Project"
          command: |
            ./gradlew jpackage jpackageAlt --no-daemon
          environment:
            CIRCLE_CI: "true"
      - store_artifacts:
          name: "Store Artifacts"
          path: desktop-merge/build/dist

  build-linux:
    # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: gradle:jdk17
    description: "Build Linux DEB package"
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Make gradlew executable"
          command: "chmod +x gradlew"
      - run:
          name: "Install APT Packages"
          command: "apt update -y && apt install fakeroot -y"
      - run:
          name: "Build Project"
          command: |
            ./gradlew jpackage --no-daemon
          environment:
            CIRCLE_CI: "true"
      - store_artifacts:
          name: "Store Artifacts"
          path: desktop-merge/build/dist

  build-linux-rpm:
    # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: fedora:latest
    description: "Build Linux RPM package"
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Make gradlew executable"
          command: "chmod +x gradlew"
      - run:
          name: "Download and install JDK 17"
          command: |
            dnf -y install wget fakeroot coreutils
            wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.rpm
            rpm -Uvh jdk-17_linux-x64_bin.rpm
            
            java -version
          environment:
            CIRCLE_CI: "true"
      - run:
          name: "Build Project"
          command: |
            export JAVA_HOME=/usr/java/default
            export PATH=\$PATH:\$JAVA_HOME/bin
            ./gradlew jpackage --no-daemon
          environment:
            CIRCLE_CI: "true"
      - store_artifacts:
          name: "Store Artifacts"
          path: desktop-merge/build/dist

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - build-windows
      - build-macos
      - build-linux
      - build-linux-rpm
