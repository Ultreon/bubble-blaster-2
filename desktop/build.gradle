//file:noinspection GroovyUnusedCatchParameter


//import com.ultreon.gameutils.ProjectType

import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardOpenOption

buildscript {
    repositories {
        mavenCentral()

        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
            name = "sonatype"
        }

        maven {
            url = "https://maven.atlassian.com/3rdparty/"
        }

        google()
    }

    dependencies {
        classpath group: 'commons-io', name: 'commons-io', version: '2.13.0'
        classpath "com.google.code.gson:gson:2.10.1"
    }
}

//*****************//
//     Plugins     //
//*****************//
plugins {
    id 'java'
    id 'java-library'
}

apply plugin: 'java'
apply plugin: 'java-library'

//****************************//
// Setting up main properties //
//****************************//
//projectConfig {
//    type ProjectType.Desktop
//}

java {
    withSourcesJar()
    withJavadocJar()
}

repositories {
    maven {
        url = "https://maven.fabricmc.net"
        name = "FabricMC"
    }
}

dependencies {
    implementation project(":gameprovider")
    implementation project(":core")

    implementation "com.formdev:flatlaf:3.2.1"

    implementation "com.badlogicgames.gdx:gdx:$gdx_version"
    implementation "com.badlogicgames.gdx:gdx-box2d:$gdx_version"
    implementation "com.badlogicgames.ashley:ashley:$ashley_version"
    implementation "com.badlogicgames.gdx:gdx-ai:$ai_version"
    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdx_controllers_version"
    implementation "com.badlogicgames.gdx:gdx-freetype:$gdx_version"
    implementation "com.badlogicgames.box2dlights:box2dlights:$box_2d_lights_version"

    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdx_version"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdx_version:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdx_version:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-bullet-platform:$gdx_version:natives-desktop"
    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdx_controllers_version"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdx_version:natives-desktop"
    implementation "com.badlogicgames.gdx-video:gdx-video-lwjgl3:1.3.2-SNAPSHOT"

    // Apache Log4J
    implementation "org.apache.logging.log4j:log4j:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-api:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"

    // JNA
    implementation "net.java.dev.jna:jna:$jna_version"
    implementation "net.java.dev.jna:jna-platform:$jna_version"

    // SLF4J
    api "org.slf4j:slf4j-api:$slf4j_version"

    // Google
    implementation api("com.google.code.gson:gson:2.10.1")
    implementation api("com.google.guava:guava:32.0.0-jre")

    // Misc
    implementation api("it.unimi.dsi:fastutil:8.5.12")
    implementation api("com.raylabz:opensimplex:1.0.3")

    implementation api("space.earlygrey:shapedrawer:$shapedrawer_version")

    // ImGui
    implementation api("io.github.spair:imgui-java-binding:$imgui_version")
    implementation api("io.github.spair:imgui-java-lwjgl3:$imgui_version")
    implementation api("io.github.spair:imgui-java-natives-linux:$imgui_version")
    implementation api("io.github.spair:imgui-java-natives-macos:$imgui_version")
    implementation api("io.github.spair:imgui-java-natives-windows:$imgui_version")

    implementation api("it.unimi.dsi:fastutil-core:8.5.9")
    implementation api("com.google.code.findbugs:jsr305:$jsr_version")
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    implementation api("org.xbib.elasticsearch:joptsimple:6.3.2.1")
    implementation api("org.apache.logging.log4j:log4j:$log4j_version")
    implementation api("org.apache.logging.log4j:log4j-core:$log4j_version")
    implementation api("org.apache.logging.log4j:log4j-api:$log4j_version")

    // quilt-loader dependencies
    implementation api("org.ow2.asm:asm:${project.asm_version}")
    implementation api("org.ow2.asm:asm-analysis:${project.asm_version}")
    implementation api("org.ow2.asm:asm-commons:${project.asm_version}")
    implementation api("org.ow2.asm:asm-tree:${project.asm_version}")
    implementation api("org.ow2.asm:asm-util:${project.asm_version}")

    implementation api("net.fabricmc:sponge-mixin:${project.mixin_version}") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
    }

    //noinspection GradleDynamicVersion
    implementation api('net.fabricmc:tiny-mappings-parser:0.3.0+build.17')
    implementation api('net.fabricmc:tiny-remapper:0.8.7')
    //noinspection GradleDynamicVersion
    implementation api('net.fabricmc:dev-launch-injector:0.2.1+build.8')
    implementation api('net.fabricmc:access-widener:2.1.0')

    implementation api("org.quiltmc:quilt-loader:$quilt_version")

    //noinspection GradleDynamicVersion
    implementation api('net.fabricmc:tiny-mappings-parser:0.3.0+build.17')
    implementation api('net.fabricmc:tiny-remapper:0.8.7')
    //noinspection GradleDynamicVersion
    implementation api('net.fabricmc:dev-launch-injector:0.2.1+build.8')
    implementation api('net.fabricmc:access-widener:2.1.0')

    implementation api("org.quiltmc:quilt-loader:$quilt_version")
    implementation api("org.quiltmc:quilt-json5:1.0.4+final")
    implementation api("org.quiltmc:quilt-config:1.1.0-beta.3")
    implementation api("org.quiltmc.qup:gson:0.2.0")
}

compileJava {
    dependsOn ":gameprovider:build"
    dependsOn ":core:build"
}

processResources {
    dependsOn ":gameprovider:build"
    dependsOn ":core:build"
    from(file("$rootProject.projectDir/LICENSE")) { into "META-INF/" }
    exclude "*.pdn", "*.xcf", "*.ps"

    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

jar {
    dependsOn ":gameprovider:build"
    dependsOn ":core:build"
    //noinspection GroovyAssignabilityCheck
    manifest {
        //noinspection GroovyAssignabilityCheck
        attributes 'Implementation-Title': 'Bubble Blaster',
                'Implementation-Vendor': 'Ultreon Team',
                project_version: project.project_version,
                'Main-Class': 'com.ultreon.bubbles.DesktopLauncher',
                'Multi-Release': 'true'
    }

    from {
        compileJava.outputs
    }
    from {
        processResources.outputs
    }

    zip64 true
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

tasks.register('prepareRun', {
    Files.createDirectories(Paths.get(rootProject.projectDir.getAbsolutePath(), "run"))
})

tasks.withType(ProcessResources).configureEach {
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
